(function(){var LocationSearch,gmapStyles,markerStyle_1,markerStyle_2;gmapStyles||(gmapStyles={}),gmapStyles.style1=[{featureType:"water",elementType:"geometry",stylers:[{color:"#e9e9e9"},{lightness:17}]},{featureType:"landscape",elementType:"geometry",stylers:[{color:"#f5f5f5"},{lightness:20}]},{featureType:"road.highway",elementType:"geometry.fill",stylers:[{color:"#ffffff"},{lightness:17}]},{featureType:"road.highway",elementType:"geometry.stroke",stylers:[{color:"#ffffff"},{lightness:29},{weight:.2}]},{featureType:"road.arterial",elementType:"geometry",stylers:[{color:"#ffffff"},{lightness:18}]},{featureType:"road.local",elementType:"geometry",stylers:[{color:"#ffffff"},{lightness:16}]},{featureType:"poi",elementType:"geometry",stylers:[{color:"#f5f5f5"},{lightness:21}]},{featureType:"poi.park",elementType:"geometry",stylers:[{color:"#dedede"},{lightness:21}]},{elementType:"labels.text.stroke",stylers:[{visibility:"on"},{color:"#ffffff"},{lightness:16}]},{elementType:"labels.text.fill",stylers:[{saturation:36},{color:"#333333"},{lightness:40}]},{elementType:"labels.icon",stylers:[{visibility:"off"}]},{featureType:"transit",elementType:"geometry",stylers:[{color:"#f2f2f2"},{lightness:19}]},{featureType:"administrative",elementType:"geometry.fill",stylers:[{color:"#fefefe"},{lightness:20}]},{featureType:"administrative",elementType:"geometry.stroke",stylers:[{color:"#fefefe"},{lightness:17},{weight:1.2}]}],gmapStyles.style2=[{featureType:"administrative",elementType:"labels.text.fill",stylers:[{color:"#444444"}]},{featureType:"administrative.country",elementType:"geometry.fill",stylers:[{visibility:"on"}]},{featureType:"administrative.province",elementType:"labels.icon",stylers:[{hue:"#ff0000"},{visibility:"on"}]},{featureType:"landscape",elementType:"all",stylers:[{color:"#f2f2f2"}]},{featureType:"poi",elementType:"all",stylers:[{visibility:"off"}]},{featureType:"road",elementType:"all",stylers:[{saturation:-100},{lightness:45}]},{featureType:"road.highway",elementType:"all",stylers:[{visibility:"simplified"}]},{featureType:"road.arterial",elementType:"labels.icon",stylers:[{visibility:"off"}]},{featureType:"transit",elementType:"all",stylers:[{visibility:"off"}]},{featureType:"water",elementType:"all",stylers:[{color:"#46bcec"},{visibility:"on"}]}],gmapStyles.style3=[{featureType:"administrative",elementType:"labels.text.fill",stylers:[{color:"#999999"}]},{featureType:"administrative.country",elementType:"geometry.fill",stylers:[{visibility:"on"}]},{featureType:"administrative.province",elementType:"labels.icon",stylers:[{hue:"#fcb034"},{visibility:"on"}]},{featureType:"landscape",elementType:"all",stylers:[{color:"#f4f4f4"}]},{featureType:"poi",elementType:"all",stylers:[{visibility:"off"}]},{featureType:"road",elementType:"all",stylers:[{saturation:-100},{lightness:45}]},{featureType:"road.highway",elementType:"all",stylers:[{visibility:"simplified"}]},{featureType:"road.arterial",elementType:"labels.icon",stylers:[{visibility:"off"}]},{featureType:"transit",elementType:"all",stylers:[{visibility:"off"}]},{featureType:"water",elementType:"all",stylers:[{color:"#1b99d6"},{visibility:"on"}]}],markerStyle_1="M12,11.5A2.5,2.5 0 0,1 9.5,9A2.5,2.5 0 0,1 12,6.5A2.5,2.5 0 0,1 14.5,9A2.5,2.5 0 0,1 12,11.5M12,2A7,7 0 0,0 5,9C5,14.25 12,22 12,22C12,22 19,14.25 19,9A7,7 0 0,0 12,2Z",markerStyle_2="M 12,2 C 8.3348086,2 5,5.3348086 5,9 c 0,5.25 7,13 7,13 0,0 7,-7.75 7,-13 0,-3.6651914 -3.334809,-7 -7,-7 z",LocationSearch=function($http,$filter,$compile){var directive;return directive={restrict:"EA",priority:2,controller:function($scope,$filter){this.getUserPosition=function(){return navigator.geolocation.getCurrentPosition($scope.geoSuccessHandler,$scope.getDefaultLatLon)},this.geoSuccessHandler=function(position){return $scope.userLat=position.coords.latitude,$scope.userLon=position.coords.longitude,$scope.initialCenter=new google.maps.LatLng(position.coords.latitude,position.coords.longitude),$scope.$apply(),$scope.map.panTo($scope.initialCenter)},this.getDefaultLatLon=function(err){var data;return data={address:$scope.fallbackCenter},$scope.geocoder.geocode(data,function(results,status){var location;return location=results[0].geometry.location,$scope.initialCenter=new google.maps.LatLng(location.lat(),location.lng()),$scope.map.panTo($scope.initialCenter)})},this.openModal=function(index){var place;return place=$scope.results[index],console.info(place),$scope.modalPlace=place},this.closeModal=function(){return $scope.modalPlace=!1},this.shuffle=function(array,maxResults){var i,j,shuffled,temp;for(null==maxResults&&(maxResults=$scope.maxResults),i=array.length-1;i>0;)j=Math.floor(Math.random()*(i+1)),temp=array[i],array[i]=array[j],array[j]=temp,i--;return shuffled=array.slice(0,maxResults),$filter("orderBy")(shuffled,"distance")},this.distance=function(lat1,lon1,lat2,lon2,unit){var dist,radlat1,radlat2,radtheta,theta;return radlat1=Math.PI*lat1/180,radlat2=Math.PI*lat2/180,theta=lon1-lon2,radtheta=Math.PI*theta/180,dist=Math.sin(radlat1)*Math.sin(radlat2)+Math.cos(radlat1)*Math.cos(radlat2)*Math.cos(radtheta),dist=Math.acos(dist),dist=180*dist/Math.PI,dist=60*dist*1.1515,"K"===unit&&(dist=1.609344*dist),"N"===unit&&(dist=.8684*dist),dist},this.clearMarkers=function(){var k,len,marker,ref;for(ref=$scope.markers,k=0,len=ref.length;len>k;k++)marker=ref[k],marker.setMap(null);return $scope.markers=[]},this.markerSymbol=function(color,strokeColor,scale,strokeWeight){var symbol;return null==color&&(color="#000"),null==strokeColor&&(strokeColor="#fff"),null==scale&&(scale=1.9),null==strokeWeight&&(strokeWeight=2),symbol={path:markerStyle_2,fillColor:color,fillOpacity:1,strokeColor:strokeColor,strokeWeight:strokeWeight,scale:scale,anchor:new google.maps.Point(11.7,22),labelOrigin:new google.maps.Point(12,10)}},this.markerLabel=function(text,color,size,weight){var label;return null==color&&(color="#ffffff"),null==size&&(size="16px"),null==weight&&(weight="800"),label={color:color,fontSize:size,fontWeight:weight,text:text}},this.updateMap=function(){var bounds,index,k,len,place,ref,results1;if($scope.results.length){for(bounds=new google.maps.LatLngBounds,$scope.clearMarkers(),ref=$scope.results,results1=[],index=k=0,len=ref.length;len>k;index=++k)place=ref[index],results1.push(function(item){var marker,position;return position=new google.maps.LatLng(place.lat,place.lon),bounds.extend(position),$scope.map.fitBounds(bounds),marker=new google.maps.Marker({map:$scope.map,position:position,icon:$scope.markerSymbol(),label:$scope.markerLabel($scope.alphabet[index])}),place.marker=marker,marker.addListener("click",function(){return $scope.toggleActive(item),$scope.$apply()}),$scope.markers.push(marker),index===$scope.results.length-1?($scope.mapCenter=bounds.getCenter(),$scope.map.panTo($scope.mapCenter)):void 0}(place));return results1}return $scope.clearMarkers(),$scope.map.setZoom($scope.initialZoom),$scope.map.panTo($scope.initialCenter)},this.renderMap=function(){var mapOptions;return mapOptions={maxZoom:$scope.maxZoom,zoom:$scope.initialZoom,scrollwheel:!1,disableDefaultUI:!0},$scope.mapStyle&&(mapOptions.styles=gmapStyles[$scope.mapStyle]),$scope.map=new google.maps.Map(document.getElementById("gmapSearchContainer"),mapOptions),google.maps.event.addListenerOnce($scope.map,"idle",function(){return console.info("MAP IS READY")})},this.setInactive=function(place){return place.marker.setIcon($scope.markerSymbol()),place.active=!1},this.toggleActive=function(place){return place.active?$scope.setInactive(place):$scope.setActive(place)},this.setActive=function(place){var i,k,l,len,len1,marker,ref,ref1;for(ref=$scope.markers,k=0,len=ref.length;len>k;k++)marker=ref[k],marker.setIcon($scope.markerSymbol());for(ref1=$scope.places,l=0,len1=ref1.length;len1>l;l++)i=ref1[l],i.active=!1;return place.active=!0,place.marker.setIcon($scope.markerSymbol("#c4301a"))},this.showDirection=function(place,event){var url,win;return event.stopPropagation(),url="https://www.google.com/maps/dir/"+$scope.userLat+","+$scope.userLon+"/"+place.lat+","+place.lon+"/",win=window.open(url,"_blank"),win.focus()},this.getFallbackResults=function(){return $scope.results=$scope.shuffle($scope.places)},this.filterPlaces=function(){var maxDistance,result;return maxDistance=10,$scope.search.length<2&&$scope.radius<=0?($scope.getFallbackResults(),$scope.updateMap()):(result=$scope.filterTerm($scope.places),console.log("RESULT length",result.length),$scope.radius>0?result.length?$scope.geocoder.geocode({address:$scope.search},function(results){var location;for(location=results[0].geometry.location,result=$scope.filterNearby(result,location);!result.length<$scope.maxResults&&1e3>=maxDistance;)maxDistance+=maxDistance,result=$scope.filterNearby($scope.places,location,maxDistance);return $scope.results=result,$scope.$apply(),$scope.updateMap()}):(console.info("BLAAAAAAAAA"),$scope.getNearby()):result.length?($scope.results=$scope.shuffle(result),$scope.updateMap()):(console.info("nothing found in dataset, try to geocode and get nearby"),$scope.geocoder.geocode({address:$scope.search},function(results){var location;for(location=results[0].geometry.location,result=$scope.filterNearby($scope.places,location,maxDistance);!result.length<$scope.maxResults&&1e3>=maxDistance;)maxDistance+=maxDistance,result=$scope.filterNearby($scope.places,location,maxDistance);return $scope.results=result,$scope.$apply(),$scope.updateMap()})))},this.filterNearby=function(places,location,maxDistance,maxResults){var filterByDistance,ordered,result,sourceLat,sourceLon;return null==location&&(location=!1),null==maxDistance&&(maxDistance=$scope.radius),null==maxResults&&(maxResults=$scope.maxResults),location?(sourceLat=location.lat(),sourceLon=location.lng()):(sourceLat=$scope.userLat,sourceLon=$scope.userLon),filterByDistance=function(item,index){return item.distance=$scope.distance(sourceLat,sourceLon,item.lat,item.lon,"K"),item.distance<=maxDistance},result=$filter("filter")(places,filterByDistance),ordered=$filter("orderBy")(result,"distance"),ordered.slice(0,maxResults)},this.getNearby=function(){var maxDistance,places,result;if(places=$scope.places,$scope.search.length)return $scope.geocoder.geocode({address:$scope.search},function(results){var location,result;return location=results[0].geometry.location,result=$scope.filterNearby(places,location),$scope.results=result,$scope.updateMap(),$scope.$apply()});for(result=$scope.filterNearby(places),maxDistance=10;!result.length<$scope.maxResults&&1e3>=maxDistance;)maxDistance+=maxDistance,result=$scope.filterNearby(places,!1,maxDistance);return $scope.results=result,$scope.updateMap()},this.filterTerm=function(places){var activeField,activeFields,fields,filterByTerm,k,len,result;for(activeFields=$scope.fields.filter(function(item){return item.checked}),fields=[],k=0,len=activeFields.length;len>k;k++)activeField=activeFields[k],fields.push(activeField.label);return filterByTerm=function(item,index){var chunk,chunkFound,chunks,l,len1,len2,m,property,result,results;for(result=!1,$scope.userLat&&(item.distance=$scope.distance($scope.userLat,$scope.userLon,item.lat,item.lon,"K")),chunks=$scope.search.split(" "),results=[],l=0,len1=chunks.length;len1>l;l++){for(chunk=chunks[l],chunkFound=!1,m=0,len2=fields.length;len2>m;m++)property=fields[m],item[property]&&item[property].toLowerCase().indexOf(chunk.toLowerCase())>=0&&(chunkFound=!0);results.push(chunkFound)}return results.every(function(item){return item})},result=$filter("filter")(places,filterByTerm),$filter("orderBy")(result,"distance")},this.getData=function(){return console.info("IN PARENT"),$http.get($scope.resourceUrl).success(function(d){var key,ref,value;ref=d[0];for(key in ref)value=ref[key],$scope.fields.push({label:key,checked:$scope.defaultFilters.indexOf(key)>=0});return $scope.places=d,$scope.getFallbackResults(),$scope.updateMap()})},this.getTemplate=function(){return'<md-sidenav class="md-sidenav-left md-whiteframe-z2 sidenav-filter" md-component-id="left">\n  <md-tabs md-stretch-tabs="always" flex md-align-tabs="bottom">\n    <md-tab>\n      <md-tab-label>\n        <span><md-icon md-font-icon="mdi-magnify" class="mdi"></md-icon></span>\n      </md-tab-label>\n      <md-tab-body>\n        <md-content class="md-padding">\n          <h2 class="md-headline">Search Nearby</h2>\n          <p class="md-body-1" ng-if="!userLat">We need your Location to enable Nearby-Search</p>\n          <md-button ng-click="getUserPosition()" class="md-raised md-primary" ng-if="!userLat">Get Position</md-button>\n          <md-input-container class="md-block">\n            <label>Radius</label>\n            <md-select\n              ng-model="radius"\n              ng-value="radius"\n              ng-disabled="!userLat"\n              ng-change="getNearby()">\n              <md-option ng-repeat="availableRadius in availableRadii" value="{{availableRadius}}">{{availableRadius}}</md-option>\n            </md-select>\n          </md-input-container>\n        </md-content>\n      </md-tab-body>\n    </md-tab>\n    <md-tab>\n      <md-tab-label>\n        <span><md-icon md-font-icon="mdi-filter-variant" class="mdi"></md-icon></span>\n      </md-tab-label>\n      <md-tab-body>\n        <md-content class="md-padding">\n          <md-switch\n            class="md-primary" ng-repeat="field in fields"\n            ng-model="field.checked"\n            aria-label="{{field.label}}">{{field.label}}</md-switch>\n        </md-content>\n      </md-tab-body>\n    </md-tab>\n  </md-tabs>\n</md-sidenav>\n<md-content flex layout-padding>\n  <md-button class="md-icon-button toggleSidenav" ng-click="toggleSidenav()">\n    <md-icon class="mdi" md-font-icon="mdi-settings"></md-icon>\n  </md-button>\n  <md-button class="md-icon-button getPosition" ng-click="getUserPosition()">\n    <md-icon class="mdi" md-font-icon="mdi-crosshairs-gps"></md-icon>\n  </md-button>\n  <input id="gmapSearch" type="text" ng-model="search" ng-model-options="{debounce: 700}" ng-change="filterPlaces()" placeholder="Search">\n  <div id="gmapSearchContainer"></div>\n</md-content>\n<md-sidenav class="md-sidenav-right md-whiteframe-z2" md-component-id="right" md-is-locked-open="results.length > 0">\n  <md-content layout-padding>\n    <md-card\n      ng-repeat="place in results | orderBy: cardOrder"\n      ng-click="toggleActive(place)"\n      ng-class="{active: place.active}">\n      <md-card-content>\n        <h2 class="md-title">{{place[addressFields.name]}}</h2>\n        <p class="md-body-1">{{place[addressFields.street]}}<br>\n        {{place[addressFields.zip]}} {{place[addressFields.city]}}</p>\n      <md-card-content>\n    </md-card>\n  </md-content>\n</md-sidenav>'}},link:function($scope,elem,attrs,ctrl){var __constructor;return __constructor=function(){var defaultFilters;return $scope.resourceUrl=attrs.resourceUrl,$scope.fieldName=attrs.fieldName,$scope.fieldStreet=attrs.fieldStreet,$scope.fieldZip=attrs.fieldZip,$scope.fieldCity=attrs.fieldCity,$scope.initialFilters=attrs.initialFilters,$scope.maxResults=attrs.maxResults,$scope.initialZoom=attrs.initialZoom,$scope.maxZoom=attrs.maxZoom,$scope.fallbackCenter=attrs.fallbackCenter,$scope.fallbackImage=attrs.fallbackImage,$scope.mapStyle=attrs.mapStyle,$scope.alphabet="ABCDEFGHIJKLMNOPQRSTUVWXYZ",$scope.initialFilters=$scope.initialFilters.replace(/ +(?= )/g,"").split(" "),$scope.maxResults=$scope.maxResults||5,$scope.initialZoom=$scope.initialZoom||8,$scope.radius=$scope.initialRadius||0,$scope.search="",$scope.results=[],$scope.markers=[],$scope.places=[],$scope.modalPlace=!1,$scope.cardOrder=null,$scope.availableFilters=null,$scope.availableRadii=[1,2,5,10,25,50,100],$scope.fields=[],$scope.addressFields={name:$scope.fieldName,street:$scope.fieldStreet,zip:$scope.fieldZip,city:$scope.fieldCity},defaultFilters=[$scope.addressFields.city,$scope.addressFields.zip,$scope.addressFields.name],$scope.defaultFilters=$scope.initialFilters||defaultFilters,$scope.geocoder=new google.maps.Geocoder,elem.html(ctrl.getTemplate()),$compile(elem.contents())($scope),$scope.renderMap(),$scope.getUserPosition(),$scope.getDefaultLatLon(),ctrl.getData()},$scope.getUserPosition=ctrl.getUserPosition,$scope.geoSuccessHandler=ctrl.geoSuccessHandler,$scope.getDefaultLatLon=ctrl.getDefaultLatLon,$scope.openModal=ctrl.openModal,$scope.closeModal=ctrl.closeModal,$scope.shuffle=ctrl.shuffle,$scope.distance=ctrl.distance,$scope.clearMarkers=ctrl.clearMarkers,$scope.markerSymbol=ctrl.markerSymbol,$scope.markerLabel=ctrl.markerLabel,$scope.updateMap=ctrl.updateMap,$scope.renderMap=ctrl.renderMap,$scope.setInactive=ctrl.setInactive,$scope.toggleActive=ctrl.toggleActive,$scope.setActive=ctrl.setActive,$scope.showDirection=ctrl.showDirection,$scope.getFallbackResults=ctrl.getFallbackResults,$scope.filterPlaces=ctrl.filterPlaces,$scope.filterTerm=ctrl.filterTerm,$scope.filterNearby=ctrl.filterNearby,$scope.getNearby=ctrl.getNearby,__constructor()}}},angular.module("nickel.locationSearch",[]).directive("locationSearch",LocationSearch)}).call(this);